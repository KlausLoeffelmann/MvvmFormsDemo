// <auto-generated />
using DBSchemaUpdater;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DBSchemaUpdater.Migrations
{
    [DbContext(typeof(DbSchemaUpdateContext))]
    partial class DbSchemaUpdateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Event", b =>
                {
                    b.Property<Guid>("IdEvent")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("BookingDate");

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset>("DateLastEdited");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("Duration");

                    b.Property<TimeSpan?>("EndTime");

                    b.Property<Guid?>("KontaktID");

                    b.Property<TimeSpan?>("StartTime");

                    b.HasKey("IdEvent");

                    b.HasIndex("KontaktID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("DataLayer.Kontakt", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset>("DateLastEdited");

                    b.Property<DateTimeOffset>("DateOfBirth");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Kontakte");
                });

            modelBuilder.Entity("DataLayer.Event", b =>
                {
                    b.HasOne("DataLayer.Kontakt", "Kontakt")
                        .WithMany()
                        .HasForeignKey("KontaktID");
                });
#pragma warning restore 612, 618
        }
    }
}
